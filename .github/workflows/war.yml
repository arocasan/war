# This is a basic workflow to help you get started with Actions

name: Create issue if not exists
env:
  TEST_URL: ${{ secrets.JIRA_CLOUD_SITE }}

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - main
      - getting-started
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  sanity_check:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
  
      - name: Call Jira Cloud Please!!
       
        run: | 
          echo Soo this is happening "$SEC" ${{secrets.SUPER_SECRET}}
          curl --request GET \
          --url 'https://${{ secrets.JIRA_CLOUD_SITE }}.atlassian.net/rest/api/3/project/WAR' \
          --user '${{ secrets.JIRA_CLOUD_USER }}:${{ secrets.JIRA_CLOUD_TOKEN }}' \
          --header 'Accept: application/json'
  create_issue:
      needs: sanity_check
      runs-on: ubuntu-latest
      
      steps:
        - name: Create Issue
          id: createIssue
          if: "!contains(github.event.head_commit.message, 'WAR-')"
          uses: fjogeleit/http-request-action@v1
          with:
              url: 'https://${{ secrets.JIRA_CLOUD_SITE }}.atlassian.net/rest/api/3/issue'
              method: 'POST'
              username: '${{ secrets.JIRA_CLOUD_USER }}'
              password: '${{ secrets.JIRA_CLOUD_TOKEN }}'
              customHeaders: '{"Content-Type": "application/json"}'
              data: '{"fields":{"project":{"id":"10042"},"issuetype":{"id":"10002"},"components": [{"id": "10027"}],"summary":"${{ github.event.head_commit.message }}"}}'
  send_to_slack:
      needs: create_issue
      runs-on: ubuntu-latest
      steps:

        - name: Get new issue
          if: ${{ success() && step.createIssue.conlusion == "success"}}
          run: |
            echo ${{ steps.createIssue.outputs.response }}
            echo ${{ fromJson(steps.createIssue.outputs.response).key}}

        - name: Send notification to Slack
          uses: act10ns/slack@v2.0.0
          env: 
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          with:
            status: ${{ job.status}}
            message: "Created <https://${{ secrets.JIRA_CLOUD_SITE }}.atlassian.net/browse/${{ fromJson(steps.createIssue.outputs.response).key}}|${{ fromJson(steps.createIssue.outputs.response).key}}> issue, because no issue was refferd earlier"




          

